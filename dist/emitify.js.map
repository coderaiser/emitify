{"version":3,"file":"emitify.js","sources":["../lib/emitify.js"],"sourcesContent":["'use strict';\n\nmodule.exports = Emitify;\n\nfunction Emitify() {\n    if (!(this instanceof Emitify))\n        return new Emitify();\n    \n    this._all = {};\n}\n\nEmitify.prototype.on = function(event, callback) {\n    const funcs = this._all[event];\n    \n    check(event, callback);\n    \n    if (funcs)\n        funcs.push(callback);\n    else\n        this._all[event] = [callback];\n    \n    return this;\n};\n\nEmitify.prototype.addListener =\nEmitify.prototype.on;\n\nEmitify.prototype.once = function(event, callback) {\n    const self = this;\n    \n    check(event, callback);\n    \n    self.on(event, function fn() {\n        callback.apply(null, arguments);\n        self.off(event, fn);\n    });\n    \n    return this;\n};\n\nEmitify.prototype.off = function(event, callback) {\n    const events = this._all[event] || [];\n    let index = events.indexOf(callback);\n    \n    check(event, callback);\n    \n    while (~index) {\n        events.splice(index, 1);\n        index = events.indexOf(callback);\n    }\n    \n    return this;\n};\n\nEmitify.prototype.removeListener =\nEmitify.prototype.off;\n\nEmitify.prototype.emit = function(event) {\n    const args = [].slice.call(arguments, 1);\n    const funcs = this._all[event];\n    \n    checkEvent(event);\n    \n    if (!funcs && event === 'error')\n        throw args[0];\n    \n    if (!funcs)\n        return this;\n     \n    funcs.forEach((fn) => {\n        fn.apply(null, args);\n    });\n    \n    return this;\n};\n\nEmitify.prototype.removeAllListeners = function(event) {\n    checkEvent(event);\n    \n    this._all[event] = [];\n    \n    return this;\n};\n\nfunction checkEvent(event) {\n    if (typeof event !== 'string')\n        throw Error('event should be string!');\n}\n\nfunction checkFn(callback) {\n    if (typeof callback !== 'function')\n        throw Error('callback should be function!');\n}\n\nfunction check(event, callback) {\n    checkEvent(event);\n    checkFn(callback);\n}\n\n"],"names":["Emitify","this","_all","checkEvent","event","Error","checkFn","callback","check","module","exports","prototype","on","funcs","push","addListener","once","self","fn","apply","arguments","off","events","index","indexOf","splice","removeListener","emit","args","slice","call","forEach","removeAllListeners"],"mappings":"sJAIA,SAASA,UACCC,eAAgBD,IAClB,MAAO,IAAIA,QAEVE,QA4ET,QAASC,GAAWC,MACK,gBAAVA,GACP,KAAMC,OAAM,2BAGpB,QAASC,GAAQC,MACW,kBAAbA,GACP,KAAMF,OAAM,gCAGpB,QAASG,GAAMJ,EAAOG,KACPH,KACHG,GA9FZE,OAAOC,QAAUV,EASjBA,EAAQW,UAAUC,GAAK,SAASR,EAAOG,MAC7BM,GAAQZ,KAAKC,KAAKE,YAElBA,EAAOG,GAETM,EACAA,EAAMC,KAAKP,GAEXN,KAAKC,KAAKE,IAAUG,GAEjBN,MAGXD,EAAQW,UAAUI,YAClBf,EAAQW,UAAUC,GAElBZ,EAAQW,UAAUK,KAAO,SAASZ,EAAOG,MAC/BU,GAAOhB,cAEPG,EAAOG,KAERK,GAAGR,EAAO,QAASc,OACXC,MAAM,KAAMC,aAChBC,IAAIjB,EAAOc,KAGbjB,MAGXD,EAAQW,UAAUU,IAAM,SAASjB,EAAOG,MAC9Be,GAASrB,KAAKC,KAAKE,OACrBmB,EAAQD,EAAOE,QAAQjB,SAErBH,EAAOG,IAELgB,KACGE,OAAOF,EAAO,KACbD,EAAOE,QAAQjB,SAGpBN,OAGXD,EAAQW,UAAUe,eAClB1B,EAAQW,UAAUU,IAElBrB,EAAQW,UAAUgB,KAAO,SAASvB,MACxBwB,MAAUC,MAAMC,KAAKV,UAAW,GAChCP,EAAQZ,KAAKC,KAAKE,QAEbA,IAENS,GAAmB,UAAVT,EACV,KAAMwB,GAAK,SAEVf,MAGCkB,QAAQ,SAACb,KACRC,MAAM,KAAMS,KAGZ3B,MANIA,MASfD,EAAQW,UAAUqB,mBAAqB,SAAS5B,YACjCA,QAENF,KAAKE,MAEHH"}